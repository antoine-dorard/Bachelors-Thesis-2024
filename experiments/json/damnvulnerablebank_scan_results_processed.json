{"results": {"android_hidden_ui": {"files": [{"file_path": "dataset/damnvulnerablebank/GetTransactions.java", "match_position": [21, 59], "match_lines": [96, 96], "match_string": "                    recyclerView.setVisibility(View.GONE);", "label": {"false_positive": true, "confidence": 0.9}, "summaries": {"method": "The code defines a method that processes a JSON response, decrypts it, handles error messages, creates transaction records, and displays them in a RecyclerView.", "class": "This Java class retrieves transaction records from an API, decrypts the response, populates a RecyclerView with the records, and handles error messages and token retrieval.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": -3693745575781741345}, {"file_path": "dataset/damnvulnerablebank/GetTransactions.java", "match_position": [21, 56], "match_lines": [101, 101], "match_string": "                    emptyView.setVisibility(View.GONE);", "label": {"false_positive": true, "confidence": 0.9}, "summaries": {"method": "The code defines a method that processes a JSON response, decrypts it, handles error messages, creates transaction records, and displays them in a RecyclerView.", "class": "This Java class retrieves transaction records from an API, decrypts the response, populates a RecyclerView with the records, and handles error messages and token retrieval.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": -3693745575781741345}, {"file_path": "dataset/damnvulnerablebank/PendingBeneficiary.java", "match_position": [29, 67], "match_lines": [97, 97], "match_string": "                            recyclerView.setVisibility(View.GONE);", "label": {"false_positive": true, "confidence": 0.9}, "summaries": {"method": "The method `onResponse` processes a JSON object, decrypts it, extracts data and displays it in a RecyclerView with a customized adapter, handling errors and visibility based on the data retrieved.", "class": "This Java class manages pending beneficiaries by fetching data from an API, displaying it in a RecyclerView, and allowing the user to interact with the beneficiaries.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": -4619155395130298737}, {"file_path": "dataset/damnvulnerablebank/PendingBeneficiary.java", "match_position": [29, 64], "match_lines": [102, 102], "match_string": "                            emptyView.setVisibility(View.GONE);", "label": {"false_positive": true, "confidence": 0.9}, "summaries": {"method": "The method `onResponse` processes a JSON object, decrypts it, extracts data and displays it in a RecyclerView with a customized adapter, handling errors and visibility based on the data retrieved.", "class": "This Java class manages pending beneficiaries by fetching data from an API, displaying it in a RecyclerView, and allowing the user to interact with the beneficiaries.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": -4619155395130298737}, {"file_path": "dataset/damnvulnerablebank/SendMoney.java", "match_position": [17, 52], "match_lines": [150, 150], "match_string": "                send.setVisibility(View.INVISIBLE);", "label": {"false_positive": true, "confidence": 0.9}, "summaries": {"method": "The code uses biometric authentication to ensure secure login for a money transfer feature, handling different biometric authentication scenarios and providing appropriate messages based on the outcome.", "class": "This Java class `SendMoney` handles transferring money via API calls with biometric authentication and error handling.", "cluster": "This cluster of Java methods includes functions related to handling API requests, encryption, data retrieval, and UI interactions for a banking application, allowing users to perform actions like logging in, transferring money, managing beneficiaries, viewing balances, handling authentication, and managing profile settings efficiently."}, "method_hash": 6067649149804451220}, {"file_path": "dataset/damnvulnerablebank/SendMoney.java", "match_position": [17, 52], "match_lines": [155, 155], "match_string": "                send.setVisibility(View.INVISIBLE);", "label": {"false_positive": true, "confidence": 0.8}, "summaries": {"method": "The code uses biometric authentication to ensure secure login for a money transfer feature, handling different biometric authentication scenarios and providing appropriate messages based on the outcome.", "class": "This Java class `SendMoney` handles transferring money via API calls with biometric authentication and error handling.", "cluster": "This cluster of Java methods includes functions related to handling API requests, encryption, data retrieval, and UI interactions for a banking application, allowing users to perform actions like logging in, transferring money, managing beneficiaries, viewing balances, handling authentication, and managing profile settings efficiently."}, "method_hash": 6067649149804451220}, {"file_path": "dataset/damnvulnerablebank/SendMoney.java", "match_position": [17, 52], "match_lines": [160, 160], "match_string": "                send.setVisibility(View.INVISIBLE);", "label": {"false_positive": true, "confidence": 0.8}, "summaries": {"method": "The code uses biometric authentication to ensure secure login for a money transfer feature, handling different biometric authentication scenarios and providing appropriate messages based on the outcome.", "class": "This Java class `SendMoney` handles transferring money via API calls with biometric authentication and error handling.", "cluster": "This cluster of Java methods includes functions related to handling API requests, encryption, data retrieval, and UI interactions for a banking application, allowing users to perform actions like logging in, transferring money, managing beneficiaries, viewing balances, handling authentication, and managing profile settings efficiently."}, "method_hash": 6067649149804451220}, {"file_path": "dataset/damnvulnerablebank/ViewBeneficiary.java", "match_position": [29, 67], "match_lines": [87, 87], "match_string": "                            recyclerView.setVisibility(View.GONE);", "label": {"false_positive": true, "confidence": 0.9}, "summaries": {"method": "The code parses a JSON response, decrypts it, displays an error message if code is not 200, populates a list with beneficiary records, sets up a RecyclerView, and handles visibility of views based on the data retrieved.", "class": "This Java class extends AppCompatActivity and handles the viewing of beneficiary records by making an API request and displaying the data in a RecyclerView with the option to refresh the list.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": -8169621363654146651}, {"file_path": "dataset/damnvulnerablebank/ViewBeneficiary.java", "match_position": [29, 64], "match_lines": [92, 92], "match_string": "                            emptyView.setVisibility(View.GONE);", "label": {"false_positive": true, "confidence": 0.9}, "summaries": {"method": "The code parses a JSON response, decrypts it, displays an error message if code is not 200, populates a list with beneficiary records, sets up a RecyclerView, and handles visibility of views based on the data retrieved.", "class": "This Java class extends AppCompatActivity and handles the viewing of beneficiary records by making an API request and displaying the data in a RecyclerView with the option to refresh the list.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": -8169621363654146651}, {"file_path": "dataset/damnvulnerablebank/ViewBeneficiaryAdmin.java", "match_position": [29, 67], "match_lines": [92, 92], "match_string": "                            recyclerView.setVisibility(View.GONE);", "label": {"false_positive": true, "confidence": 0.9}, "summaries": {"method": "The code defines a method to handle a JSON response, decrypts the response, checks for errors, and populates a RecyclerView with beneficiary records if no errors are found.", "class": "This Java class extends AppCompatActivity, implements Badapter.OnItemClickListener, and handles viewing beneficiary records from an API by sending a request, processing the response, and displaying the data in a RecyclerView.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": 2673196690956606751}, {"file_path": "dataset/damnvulnerablebank/ViewBeneficiaryAdmin.java", "match_position": [29, 64], "match_lines": [97, 97], "match_string": "                            emptyView.setVisibility(View.GONE);", "label": {"false_positive": true, "confidence": 0.7}, "summaries": {"method": "The code defines a method to handle a JSON response, decrypts the response, checks for errors, and populates a RecyclerView with beneficiary records if no errors are found.", "class": "This Java class extends AppCompatActivity, implements Badapter.OnItemClickListener, and handles viewing beneficiary records from an API by sending a request, processing the response, and displaying the data in a RecyclerView.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": 2673196690956606751}], "metadata": {"cwe": "CWE-919: Weaknesses in Mobile Applications", "masvs": "MSTG-STORAGE-7", "owasp-mobile": "M1: Improper Platform Usage", "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#checking-for-sensitive-data-disclosure-through-the-user-interface-mstg-storage-7", "description": "Hidden elements in view can be used to hide data from user. But this data can be leaked.", "severity": "ERROR"}}, "android_logging": {"files": [{"file_path": "dataset/damnvulnerablebank/BankLogin.java", "match_position": [29, 62], "match_lines": [86, 88], "match_string": "                            String accessToken=obj.getString(\"accessToken\");\n                            SharedPreferences sharedPreferences = getSharedPreferences(\"jwt\", Context.MODE_PRIVATE);\n                            Log.d(\"accesstoken\",accessToken);", "label": {"false_positive": false, "confidence": 0.95}, "summaries": {"method": "This code defines a method that processes a JSON response, decrypts it, checks for error messages, saves an access token in SharedPreferences, and navigates to a dashboard activity.", "class": "This Java class handles bank login functionality, including sending login credentials to an API for authentication and processing the response, storing access tokens in SharedPreferences, and navigating to different activities based on the authentication status.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": 8085158868747059479}, {"file_path": "dataset/damnvulnerablebank/MainActivity.java", "match_position": [13, 65], "match_lines": [136, 140], "match_string": "            JSONObject decryptedResponse = new JSONObject(decryptedString);\n//            String decryptedString = EncryptData.decrypt(\"GmdBWksdEwAZFAlLVEdDX1FKS0JtQU1DHggaBkNXQQFjTkdBTUMJBgMCFQUIFA5MXUFPDxUdBg4PCkNWY05HQU1DFAYaDwgDBlhTTkUSAgwfHQcJBk9rWkkTbRw=\");\n//            JSONObject decryptedResponse = new JSONObject(decryptedString);\n\n            Log.d(\"DECRYPTING: \", decryptedResponse.toString());", "label": {"false_positive": true, "confidence": 0.9}, "summaries": {"method": "This code performs a health check by sending a GET request to a specified API endpoint and updates the UI button based on the response received.", "class": "The `MainActivity` class contains methods for handling back button press, creating the activity, navigating to login and signup pages, performing health checks, and checking for debuggers, emulators, rooted devices, and Frida server.", "cluster": "This cluster of Java methods includes functions related to handling API requests, encryption, data retrieval, and UI interactions for a banking application, allowing users to perform actions like logging in, transferring money, managing beneficiaries, viewing balances, handling authentication, and managing profile settings efficiently."}, "method_hash": -6096108432273462181}, {"file_path": "dataset/damnvulnerablebank/PendingBeneficiary.java", "match_position": [29, 88], "match_lines": [64, 66], "match_string": "                            JSONObject decryptedResponse = new JSONObject(EncryptDecrypt.decrypt(response.get(\"enc_data\").toString()));\n\n                            Log.d(\"Pending Beneficiary\", decryptedResponse.toString());", "label": {"false_positive": false, "confidence": 1.0}, "summaries": {"method": "The method `onResponse` processes a JSON object, decrypts it, extracts data and displays it in a RecyclerView with a customized adapter, handling errors and visibility based on the data retrieved.", "class": "This Java class manages pending beneficiaries by fetching data from an API, displaying it in a RecyclerView, and allowing the user to interact with the beneficiaries.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": -4619155395130298737}, {"file_path": "dataset/damnvulnerablebank/SendMoney.java", "match_position": [25, 75], "match_lines": [98, 99], "match_string": "                        JSONObject decryptedResponse =  new JSONObject(EncryptDecrypt.decrypt(response.get(\"enc_data\").toString()));\n                        Log.d(\"Send Money\", decryptedResponse.toString());", "label": {"false_positive": false, "confidence": 1.0}, "summaries": {"method": "This code defines a method to handle responses from a server, decrypting the response data and displaying an error message if the response code is not 200, then starting a new activity.", "class": "This Java class `SendMoney` handles transferring money via API calls with biometric authentication and error handling.", "cluster": "The cluster of Java methods mainly focuses on interacting with an API, extracting and handling JSON responses, displaying data in RecyclerViews, and performing various operations related to transactions, beneficiaries, and user accounts after decrypting responses using Encryption."}, "method_hash": 3447552547982151806}], "metadata": {"cwe": "CWE-532: Insertion of Sensitive Information into Log File", "masvs": "MSTG-STORAGE-3", "owasp-mobile": "M1: Improper Platform Usage", "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#logs", "description": "The App logs information. Please ensure that sensitive information is never logged.", "severity": "INFO"}}, "hardcoded_secret": {"files": [{"file_path": "dataset/damnvulnerablebank/EncryptDecrypt.java", "match_position": [5, 44], "match_lines": [6, 6], "match_string": "    static public String secret = \"amazing\";", "label": {"false_positive": false, "confidence": 1.0}}], "metadata": {"cwe": "CWE-798: Use of Hard-coded Credentials", "masvs": "MSTG-STORAGE-14", "owasp-mobile": "M9: Reverse Engineering", "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#storing-a-key---example", "description": "A hardcoded secret is identified.", "severity": "WARNING"}}, "android_detect_tapjacking": {"metadata": {"cwe": "CWE-200: Information Exposure", "owasp-mobile": "M1: Improper Platform Usage", "masvs": "MSTG-PLATFORM-9", "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05h-Testing-Platform-Interaction.md#testing-for-overlay-attacks-mstg-platform-9", "description": "This app does not have capabilities to prevent tapjacking attacks. An attacker can hijack the user's taps and tricks him into performing some critical operations that he did not intend to.", "severity": "INFO"}}, "android_certificate_pinning": {"metadata": {"cwe": "CWE-295: Improper Certificate Validation", "owasp-mobile": "M3: Insecure Communication", "masvs": "MSTG-NETWORK-4", "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4", "description": "This app does not use a TLS/SSL certificate or public key pinning in code to detect or prevent MITM attacks in secure communication channel. Please verify if pinning is enabled in `network_security_config.xml`.", "severity": "INFO"}}, "android_prevent_screenshot": {"metadata": {"cwe": "CWE-200: Information Exposure", "owasp-mobile": "M2: Insecure Data Storage", "masvs": "MSTG-STORAGE-9", "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#finding-sensitive-information-in-auto-generated-screenshots-mstg-storage-9", "description": "This app does not have capabilities to prevent against Screenshots from Recent Task History/ Now On Tap etc.", "severity": "INFO"}}, "android_safetynet_api": {"metadata": {"cwe": "CWE-353: Missing Support for Integrity Check", "owasp-mobile": "M8: Code Tampering", "masvs": "MSTG-RESILIENCE-1", "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05j-Testing-Resiliency-Against-Reverse-Engineering.md#testing-root-detection-mstg-resilience-1", "description": "This app does not uses SafetyNet Attestation API that provides cryptographically-signed attestation, assessing the device's integrity. This check helps to ensure that the servers are interacting with the genuine app running on a genuine Android device. ", "severity": "INFO"}}, "android_certificate_transparency": {"metadata": {"cwe": "CWE-295: Improper Certificate Validation", "owasp-mobile": "M3: Insecure Communication", "masvs": "MSTG-NETWORK-4", "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4", "description": "This app does not enforce TLS Certificate Transparency that helps to detect SSL certificates that have been mistakenly issued by a certificate authority or maliciously acquired from an otherwise unimpeachable certificate authority.", "severity": "INFO"}}}, "errors": []}