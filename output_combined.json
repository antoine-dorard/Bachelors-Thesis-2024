{
    "results": {
        "android_hidden_ui": {
            "files": [
                {
                    "file_path": "damnvulnerablebank/GetTransactions.java",
                    "match_position": [
                        21,
                        59
                    ],
                    "match_lines": [
                        96,
                        96
                    ],
                    "match_string": "                    recyclerView.setVisibility(View.GONE);"
                },
                {
                    "file_path": "damnvulnerablebank/GetTransactions.java",
                    "match_position": [
                        21,
                        56
                    ],
                    "match_lines": [
                        101,
                        101
                    ],
                    "match_string": "                    emptyView.setVisibility(View.GONE);"
                },
                {
                    "file_path": "damnvulnerablebank/PendingBeneficiary.java",
                    "match_position": [
                        29,
                        67
                    ],
                    "match_lines": [
                        97,
                        97
                    ],
                    "match_string": "                            recyclerView.setVisibility(View.GONE);"
                },
                {
                    "file_path": "damnvulnerablebank/PendingBeneficiary.java",
                    "match_position": [
                        29,
                        64
                    ],
                    "match_lines": [
                        102,
                        102
                    ],
                    "match_string": "                            emptyView.setVisibility(View.GONE);"
                },
                {
                    "file_path": "damnvulnerablebank/SendMoney.java",
                    "match_position": [
                        17,
                        52
                    ],
                    "match_lines": [
                        150,
                        150
                    ],
                    "match_string": "                send.setVisibility(View.INVISIBLE);"
                },
                {
                    "file_path": "damnvulnerablebank/SendMoney.java",
                    "match_position": [
                        17,
                        52
                    ],
                    "match_lines": [
                        155,
                        155
                    ],
                    "match_string": "                send.setVisibility(View.INVISIBLE);"
                },
                {
                    "file_path": "damnvulnerablebank/SendMoney.java",
                    "match_position": [
                        17,
                        52
                    ],
                    "match_lines": [
                        160,
                        160
                    ],
                    "match_string": "                send.setVisibility(View.INVISIBLE);"
                },
                {
                    "file_path": "damnvulnerablebank/ViewBeneficiary.java",
                    "match_position": [
                        29,
                        67
                    ],
                    "match_lines": [
                        87,
                        87
                    ],
                    "match_string": "                            recyclerView.setVisibility(View.GONE);"
                },
                {
                    "file_path": "damnvulnerablebank/ViewBeneficiary.java",
                    "match_position": [
                        29,
                        64
                    ],
                    "match_lines": [
                        92,
                        92
                    ],
                    "match_string": "                            emptyView.setVisibility(View.GONE);"
                },
                {
                    "file_path": "damnvulnerablebank/ViewBeneficiaryAdmin.java",
                    "match_position": [
                        29,
                        67
                    ],
                    "match_lines": [
                        92,
                        92
                    ],
                    "match_string": "                            recyclerView.setVisibility(View.GONE);"
                },
                {
                    "file_path": "damnvulnerablebank/ViewBeneficiaryAdmin.java",
                    "match_position": [
                        29,
                        64
                    ],
                    "match_lines": [
                        97,
                        97
                    ],
                    "match_string": "                            emptyView.setVisibility(View.GONE);"
                }
            ],
            "metadata": {
                "cwe": "CWE-919: Weaknesses in Mobile Applications",
                "masvs": "MSTG-STORAGE-7",
                "owasp-mobile": "M1: Improper Platform Usage",
                "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#checking-for-sensitive-data-disclosure-through-the-user-interface-mstg-storage-7",
                "description": "Hidden elements in view can be used to hide data from user. But this data can be leaked.",
                "severity": "ERROR"
            }
        },
        "android_logging": {
            "files": [
                {
                    "file_path": "damnvulnerablebank/BankLogin.java",
                    "match_position": [
                        29,
                        62
                    ],
                    "match_lines": [
                        86,
                        88
                    ],
                    "match_string": "                            String accessToken=obj.getString(\"accessToken\");\n                            SharedPreferences sharedPreferences = getSharedPreferences(\"jwt\", Context.MODE_PRIVATE);\n                            Log.d(\"accesstoken\",accessToken);"
                },
                {
                    "file_path": "damnvulnerablebank/MainActivity.java",
                    "match_position": [
                        13,
                        65
                    ],
                    "match_lines": [
                        136,
                        140
                    ],
                    "match_string": "            JSONObject decryptedResponse = new JSONObject(decryptedString);\n//            String decryptedString = EncryptData.decrypt(\"GmdBWksdEwAZFAlLVEdDX1FKS0JtQU1DHggaBkNXQQFjTkdBTUMJBgMCFQUIFA5MXUFPDxUdBg4PCkNWY05HQU1DFAYaDwgDBlhTTkUSAgwfHQcJBk9rWkkTbRw=\");\n//            JSONObject decryptedResponse = new JSONObject(decryptedString);\n\n            Log.d(\"DECRYPTING: \", decryptedResponse.toString());"
                },
                {
                    "file_path": "damnvulnerablebank/PendingBeneficiary.java",
                    "match_position": [
                        29,
                        88
                    ],
                    "match_lines": [
                        64,
                        66
                    ],
                    "match_string": "                            JSONObject decryptedResponse = new JSONObject(EncryptDecrypt.decrypt(response.get(\"enc_data\").toString()));\n\n                            Log.d(\"Pending Beneficiary\", decryptedResponse.toString());"
                },
                {
                    "file_path": "damnvulnerablebank/SendMoney.java",
                    "match_position": [
                        25,
                        75
                    ],
                    "match_lines": [
                        98,
                        99
                    ],
                    "match_string": "                        JSONObject decryptedResponse =  new JSONObject(EncryptDecrypt.decrypt(response.get(\"enc_data\").toString()));\n                        Log.d(\"Send Money\", decryptedResponse.toString());"
                }
            ],
            "metadata": {
                "cwe": "CWE-532: Insertion of Sensitive Information into Log File",
                "masvs": "MSTG-STORAGE-3",
                "owasp-mobile": "M1: Improper Platform Usage",
                "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#logs",
                "description": "The App logs information. Please ensure that sensitive information is never logged.",
                "severity": "INFO"
            }
        },
        "hardcoded_secret": {
            "files": [
                {
                    "file_path": "damnvulnerablebank/EncryptDecrypt.java",
                    "match_position": [
                        5,
                        44
                    ],
                    "match_lines": [
                        6,
                        6
                    ],
                    "match_string": "    static public String secret = \"amazing\";"
                }
            ],
            "metadata": {
                "cwe": "CWE-798: Use of Hard-coded Credentials",
                "masvs": "MSTG-STORAGE-14",
                "owasp-mobile": "M9: Reverse Engineering",
                "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#storing-a-key---example",
                "description": "A hardcoded secret is identified.",
                "severity": "WARNING"
            }
        },
        "android_detect_tapjacking": {
            "metadata": {
                "cwe": "CWE-200: Information Exposure",
                "owasp-mobile": "M1: Improper Platform Usage",
                "masvs": "MSTG-PLATFORM-9",
                "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05h-Testing-Platform-Interaction.md#testing-for-overlay-attacks-mstg-platform-9",
                "description": "This app does not have capabilities to prevent tapjacking attacks. An attacker can hijack the user's taps and tricks him into performing some critical operations that he did not intend to.",
                "severity": "INFO"
            }
        },
        "android_certificate_transparency": {
            "metadata": {
                "cwe": "CWE-295: Improper Certificate Validation",
                "owasp-mobile": "M3: Insecure Communication",
                "masvs": "MSTG-NETWORK-4",
                "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4",
                "description": "This app does not enforce TLS Certificate Transparency that helps to detect SSL certificates that have been mistakenly issued by a certificate authority or maliciously acquired from an otherwise unimpeachable certificate authority.",
                "severity": "INFO"
            }
        },
        "android_certificate_pinning": {
            "metadata": {
                "cwe": "CWE-295: Improper Certificate Validation",
                "owasp-mobile": "M3: Insecure Communication",
                "masvs": "MSTG-NETWORK-4",
                "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4",
                "description": "This app does not use a TLS/SSL certificate or public key pinning in code to detect or prevent MITM attacks in secure communication channel. Please verify if pinning is enabled in `network_security_config.xml`.",
                "severity": "INFO"
            }
        },
        "android_prevent_screenshot": {
            "metadata": {
                "cwe": "CWE-200: Information Exposure",
                "owasp-mobile": "M2: Insecure Data Storage",
                "masvs": "MSTG-STORAGE-9",
                "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#finding-sensitive-information-in-auto-generated-screenshots-mstg-storage-9",
                "description": "This app does not have capabilities to prevent against Screenshots from Recent Task History/ Now On Tap etc.",
                "severity": "INFO"
            }
        },
        "android_safetynet_api": {
            "metadata": {
                "cwe": "CWE-353: Missing Support for Integrity Check",
                "owasp-mobile": "M8: Code Tampering",
                "masvs": "MSTG-RESILIENCE-1",
                "reference": "https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05j-Testing-Resiliency-Against-Reverse-Engineering.md#testing-root-detection-mstg-resilience-1",
                "description": "This app does not uses SafetyNet Attestation API that provides cryptographically-signed attestation, assessing the device's integrity. This check helps to ensure that the servers are interacting with the genuine app running on a genuine Android device. ",
                "severity": "INFO"
            }
        }
    },
    "errors": []
}